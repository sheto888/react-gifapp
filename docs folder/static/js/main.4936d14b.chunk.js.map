{"version":3,"sources":["components/AddCategory.jsx","helpers/getGif.js","components/GifGridItem.jsx","components/GigGrid.jsx","hooks/useFetchGifs.jsx","ShetoGip.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","protoTypes","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","res","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GigGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","key","v","ShetoGip","categories","ReactDOM","render","document","getElementById"],"mappings":"+OAIe,SAASA,EAAT,GAAuC,IAAjBC,EAAgB,EAAhBA,cAAgB,EAEbC,mBAAS,IAFI,mBAE1CC,EAF0C,KAE9BC,EAF8B,KAmBjD,OACI,oCACA,0BAAMC,SAbW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,OAQd,2BACAO,KAAK,OACLC,MAAOT,EACPU,SArBkB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,YA2B/BZ,EAAYe,WAAa,CACrBd,cAAee,IAAUC,KAAKC,Y,2BCnCpBC,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACdC,EADc,kDACoCC,UAAWH,GAD/C,+DAEFI,MAAMF,GAFJ,cAEdG,EAFc,gBAGCA,EAAIC,OAHL,uBAGbC,EAHa,EAGbA,KAGDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVtB,kBAebM,GAfa,4CAAH,sDCARO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAGhC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAKf,EAAKgB,IAAI,KACnB,4BAAKN,KCDJO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECHX,SAAEA,GAAe,IAAD,EAEdlB,mBAAS,CAC/ByB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KA0BxC,OAnBAC,qBAAU,WAENxB,EAASC,GACJwB,MAAK,SAAAC,GAGEH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAM1B,CAAEpB,IAKEqB,EDpBwBK,CAAc1B,GAAjCa,EAHuB,EAG5BN,KAAaa,EAHe,EAGfA,QASpB,OACI,kBAAC,WAAD,KACF,wBAAIJ,UAAU,qCAAsChB,GAEnDoB,GAAW,uBAAGJ,UAAU,qCAAb,eAGV,yBAAKA,UAAU,cAETH,EAAOJ,KAAK,SAACC,GAAD,OACZ,kBAAC,EAAD,eACCiB,IAAKjB,EAAIC,IACLD,EAFL,CAEWkB,GAAC,WEIXC,EA7BE,WAAO,IAAD,EAGgB/C,mBAAS,CAAC,eAH1B,mBAGbgD,EAHa,KAGDjD,EAHC,KAMnB,OACI,oCACA,wCACA,kBAACD,EAAD,CAAaC,cAAeA,IAC5B,6BAIA,4BAEQiD,EAAWrB,KAAK,SAAAT,GAAQ,OACtB,kBAAC,EAAD,CACA2B,IAAK3B,EACLA,SAAUA,UClB5B+B,IAASC,OACL,kBAAC,EAAD,MACHC,SAASC,eAAe,W","file":"static/js/main.4936d14b.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function AddCategory({setCategories}) {\r\n   \r\n    const [inputValue, setinputValue] = useState('')\r\n   \r\n    const handleInputChange = (e)  => {\r\n        setinputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (inputValue.trim().length > 2) {\r\n            \r\n            setCategories(cats => [ inputValue, ...cats])\r\n            setinputValue('')\r\n        }\r\n\r\n    }\r\n   \r\n    return (\r\n        <>\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange={handleInputChange }\r\n            />\r\n         </form>\r\n        </>\r\n    )\r\n}\r\n\r\nAddCategory.protoTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\n\r\n export const getGifs = async(category) => {\r\n    const url = ` https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=0ptpthRU0XJcuzw0qyYvtrbma9tT9hKa`\r\n    const res = await fetch(url)\r\n    const {data} = await res.json()\r\n\r\n\r\n    const gifs = data.map(img => {\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n\r\n    return gifs\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n   \r\n   \r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={url} alt=\"\"/>\r\n            <h1>{title}</h1>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { Fragment } from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n/* import { useState } from 'react'\r\nimport { useEffect } from 'react' */\r\nimport { GifGridItem } from './GifGridItem'\r\n\r\n\r\nexport const GigGrid = ({category}) => {\r\n    \r\n\r\n    const {data:images, loading} = useFetchGifs( category )\r\n    \r\n\r\n    \r\n\r\n  \r\n\r\n   \r\n     \r\n    return (\r\n        <Fragment>\r\n      <h1 className=\"animate__animated animate__fadeIn\">{ category }</h1>\r\n\r\n      {loading && <p className=\"animate__animated animate__bounce\">Cargando...</p>}\r\n      \r\n       {\r\n        <div className=\"card-grid \">\r\n              {\r\n              images.map( (img) => (\r\n              <GifGridItem \r\n               key={img.id}\r\n               {...img}  v\r\n               />\r\n                 ))\r\n              }\r\n              \r\n          \r\n        </div> \r\n        }\r\n        </Fragment>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGif\"\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    \r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect(() => {\r\n        \r\n        getGifs( category )\r\n            .then(imgs => {\r\n\r\n                    \r\n                    setstate({\r\n                        data: imgs,\r\n                        loading: false\r\n                    })\r\n              \r\n\r\n            })\r\n        \r\n    }, [ category ])\r\n\r\n\r\n    \r\n\r\n    return state\r\n}\r\n\r\n","import React from 'react'\r\nimport { useState } from 'react'\r\nimport AddCategory from './components/AddCategory'\r\nimport { GigGrid } from './components/GigGrid'\r\n\r\n\r\nconst ShetoGip = () => {\r\n   \r\n   \r\n   const [categories, setCategories] = useState(['One Punnch'])\r\n    \r\n\r\n    return(\r\n        <>\r\n        <h2>ShetoGip</h2>\r\n        <AddCategory setCategories={setCategories}/>\r\n        <hr/>\r\n\r\n      \r\n\r\n        <ul>\r\n            { \r\n                categories.map( category => \r\n                  <GigGrid \r\n                  key={category} \r\n                  category={category}/>\r\n                )\r\n            }\r\n        </ul>\r\n       </>    \r\n    )\r\n}\r\n\r\n\r\n\r\nexport default ShetoGip","import React from 'react';\nimport ReactDOM from 'react-dom'\n\nimport './index.css';\nimport ShetoGip from './ShetoGip';\n\n\nReactDOM.render(\n    <ShetoGip />,\n document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}